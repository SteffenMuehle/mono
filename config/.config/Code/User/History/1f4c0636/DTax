# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:$HOME/.local/bin:/usr/local/bin:$PATH

# Path to your Oh My Zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time Oh My Zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="crcandy"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
HYPHEN_INSENSITIVE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
HIST_STAMPS="yyyy-mm-dd"

# plugins
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(history-substring-search)

source $ZSH/oh-my-zsh.sh


#########
# SHELL #
#########

# source ~/.zshrc_moia

EDITOR='nano'

# history search
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down

# History settings
HISTSIZE=100000                  # Maximum number of history entries in memory
SAVEHIST=100000                  # Maximum number of history entries saved to file
HISTFILE=~/.zsh_history          # File to save history


###########
# ALIASES #
###########
alias ls='eza --sort type --icons --git'
alias l='eza --all --sort type --icons --git'
alias cc='cd ..'
alias ccc='cd ..; cd ..'
alias cccc='cd ..; cd ..; cd ..'
alias f='find . -type f | fzf'
alias path='echo $PATH | tr ":" "\n"'
alias edit='code -n'
alias ez='code -n ~/.zshrc'
alias sz='source ~/.zshrc'


########
# PATH #
########

# add ~.local/bin to beginning of PATH
export PATH="$HOME/.local/bin:$PATH"

# activate mise
eval "$($HOME/.local/bin/mise activate zsh)"


#############
# FUNCTIONS #
#############
# Function to get the current Git branch
gb() {
  git rev-parse --abbrev-ref HEAD 2>/dev/null
}


##########
# PROMPT #
##########

COLOR_DEF=$'%f'
COLOR_USR=$'%F{243}'
COLOR_DIR=$'%F{208}'
COLOR_GIT=$'%F{39}'
setopt PROMPT_SUBST
NEWLINE=$'\n'


# Function to calculate the maximum length dynamically
calculate_max_length() {
  local dir_length=${#${(%):-%~}}
  local gitb_length=${#$(gb)}
  echo $(( dir_length > gitb_length ? dir_length : gitb_length ))
}

# Function to generate the banner with hashes dynamically
generate_banner() {
  local max_length=$(calculate_max_length)
  local banner_length=$(( max_length + 4 ))  # +4 to account for spaces and hashes on both sides
  printf '%*s' "$banner_length" '' | tr ' ' '#'
}

# Function to pad content with spaces and add a hash at the end dynamically
pad_content() {
  local content="$1"
  local max_length=$(calculate_max_length)
  local content_length=${#${(%)content}}
  local padding_length=$(( max_length - content_length + 1 ))  # +1 to account for the final hash
  printf '%s%*s' "$content" "$padding_length" ''
}

# Update PROMPT to use the dynamic banner and aligned hashes
export PROMPT='${NEWLINE}${COLOR_USR}$(generate_banner)
${COLOR_USR}# ${COLOR_GIT}$(pad_content "$(gb)")${COLOR_USR}#
${COLOR_USR}# ${COLOR_DIR}$(pad_content "%~")${COLOR_USR}#
${COLOR_USR}$(generate_banner)
${COLOR_DEF}$ '